-- Accellera Standard V2.8.1 Open Verification Library (OVL).
-- Accellera Copyright (c) 2005-2014. All rights reserved.

vunit assert_never_assert_vunit (assert_never_assert)
{
  default clock is rose(clk);
  
  property ASSERT_NEVER_XZ_P is always (
           (xzcheck_enable = 1) -> not(is_x(test_expr)) )abort(not(reset_n)) ; 

  property ASSERT_NEVER_P is always (
           ((xzcheck_enable = 0) and not(is_x(test_expr))) or (xzcheck_enable = 1) -> not(test_expr))  abort(not(reset_n)) ;

  A_ASSERT_NEVER_XZ_P:
  assert ASSERT_NEVER_XZ_P
  report "VIOLATION: ASSERT_NEVER Checker Fires : test_expr contains X or Z";

  A_ASSERT_NEVER_P:
  assert ASSERT_NEVER_P
  report "VIOLATION: ASSERT_NEVER Checker Fires : Test expression is not FALSE";

}

vunit assert_never_assume_vunit (assert_never_assume)
{
  default clock is rose(clk);
  
  property ASSERT_NEVER_XZ_P is always (
           (xzcheck_enable = 1) -> not(is_x(test_expr)) )abort(not(reset_n)) ; 

  property ASSERT_NEVER_P is always (
           ((xzcheck_enable = 0) and not(is_x(test_expr))) or (xzcheck_enable = 1) -> not(test_expr) ) abort(not(reset_n)) ;

  M_ASSERT_NEVER_XZ_P:
  assume ASSERT_NEVER_XZ_P;
  
  M_ASSERT_NEVER_P:
  assume ASSERT_NEVER_P;

}

