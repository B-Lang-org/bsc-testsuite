Command: flags set -verilog
-verilog
---------
Command: module load mkDesign
mkDesign
---------
    mkDesign       	 --  	 
        Loop           	 --  Integer	 
            the_x_0        	 --  Empty	 
                the_g          	 -- RegN Reg#(Bit#(8))	the_x_0_the_g 
                Loop           	 --  Integer	 
                    Body_0         	 --  void	 
                        the_z          	 -- RegN Reg#(Bit#(8))	the_x_0_the_z_0 
                        xyz            	 --  Empty	 
                            baz            	 -- Rule 	RL_the_x_0_xyz_0_baz 
                        bax            	 -- Rule 	RL_the_x_0_bax 
                    Body_1         	 --  void	 
                        the_z          	 -- RegN Reg#(Bit#(8))	the_x_0_the_z_1 
                        xyz            	 --  Empty	 
                            baz            	 -- Rule 	RL_the_x_0_xyz_1_baz 
                        bax            	 -- Rule 	RL_the_x_0_bax_1 
                    Body_2         	 --  void	 
                        the_z          	 -- RegN Reg#(Bit#(8))	the_x_0_the_z_2 
                        xyz            	 --  Empty	 
                            baz            	 -- Rule 	RL_the_x_0_xyz_2_baz 
                        bax            	 -- Rule 	RL_the_x_0_bax_2 
                    Body_3         	 --  void	 
                        the_z          	 -- RegN Reg#(Bit#(8))	the_x_0_the_z_3 
                        xyz            	 --  Empty	 
                            baz            	 -- Rule 	RL_the_x_0_xyz_3_baz 
                        bax            	 -- Rule 	RL_the_x_0_bax_3 
            the_x_1        	 --  Empty	 
                the_g          	 -- RegN Reg#(Bit#(8))	the_x_1_the_g 
                Loop           	 --  Integer	 
                    Body_0         	 --  void	 
                        the_z          	 -- RegN Reg#(Bit#(8))	the_x_1_the_z_0 
                        xyz            	 --  Empty	 
                            baz            	 -- Rule 	RL_the_x_1_xyz_0_baz 
                        bax            	 -- Rule 	RL_the_x_1_bax 
                    Body_1         	 --  void	 
                        the_z          	 -- RegN Reg#(Bit#(8))	the_x_1_the_z_1 
                        xyz            	 --  Empty	 
                            baz            	 -- Rule 	RL_the_x_1_xyz_1_baz 
                        bax            	 -- Rule 	RL_the_x_1_bax_1 
                    Body_2         	 --  void	 
                        the_z          	 -- RegN Reg#(Bit#(8))	the_x_1_the_z_2 
                        xyz            	 --  Empty	 
                            baz            	 -- Rule 	RL_the_x_1_xyz_2_baz 
                        bax            	 -- Rule 	RL_the_x_1_bax_2 
                    Body_3         	 --  void	 
                        the_z          	 -- RegN Reg#(Bit#(8))	the_x_1_the_z_3 
                        xyz            	 --  Empty	 
                            baz            	 -- Rule 	RL_the_x_1_xyz_3_baz 
                        bax            	 -- Rule 	RL_the_x_1_bax_3 
            the_x_2        	 --  Empty	 
                the_g          	 -- RegN Reg#(Bit#(8))	the_x_2_the_g 
                Loop           	 --  Integer	 
                    Body_0         	 --  void	 
                        the_z          	 -- RegN Reg#(Bit#(8))	the_x_2_the_z_0 
                        xyz            	 --  Empty	 
                            baz            	 -- Rule 	RL_the_x_2_xyz_0_baz 
                        bax            	 -- Rule 	RL_the_x_2_bax 
                    Body_1         	 --  void	 
                        the_z          	 -- RegN Reg#(Bit#(8))	the_x_2_the_z_1 
                        xyz            	 --  Empty	 
                            baz            	 -- Rule 	RL_the_x_2_xyz_1_baz 
                        bax            	 -- Rule 	RL_the_x_2_bax_1 
                    Body_2         	 --  void	 
                        the_z          	 -- RegN Reg#(Bit#(8))	the_x_2_the_z_2 
                        xyz            	 --  Empty	 
                            baz            	 -- Rule 	RL_the_x_2_xyz_2_baz 
                        bax            	 -- Rule 	RL_the_x_2_bax_2 
                    Body_3         	 --  void	 
                        the_z          	 -- RegN Reg#(Bit#(8))	the_x_2_the_z_3 
                        xyz            	 --  Empty	 
                            baz            	 -- Rule 	RL_the_x_2_xyz_3_baz 
                        bax            	 -- Rule 	RL_the_x_2_bax_3 
            the_x_3        	 --  Empty	 
                the_g          	 -- RegN Reg#(Bit#(8))	the_x_3_the_g 
                Loop           	 --  Integer	 
                    Body_0         	 --  void	 
                        the_z          	 -- RegN Reg#(Bit#(8))	the_x_3_the_z_0 
                        xyz            	 --  Empty	 
                            baz            	 -- Rule 	RL_the_x_3_xyz_0_baz 
                        bax            	 -- Rule 	RL_the_x_3_bax 
                    Body_1         	 --  void	 
                        the_z          	 -- RegN Reg#(Bit#(8))	the_x_3_the_z_1 
                        xyz            	 --  Empty	 
                            baz            	 -- Rule 	RL_the_x_3_xyz_1_baz 
                        bax            	 -- Rule 	RL_the_x_3_bax_1 
                    Body_2         	 --  void	 
                        the_z          	 -- RegN Reg#(Bit#(8))	the_x_3_the_z_2 
                        xyz            	 --  Empty	 
                            baz            	 -- Rule 	RL_the_x_3_xyz_2_baz 
                        bax            	 -- Rule 	RL_the_x_3_bax_2 
                    Body_3         	 --  void	 
                        the_z          	 -- RegN Reg#(Bit#(8))	the_x_3_the_z_3 
                        xyz            	 --  Empty	 
                            baz            	 -- Rule 	RL_the_x_3_xyz_3_baz 
                        bax            	 -- Rule 	RL_the_x_3_bax_3 
Command: browseinst list 0
1 mkDesign synth
---------
Command: browseinst detail 0
X(Node) = ROOT
---------
Command: browseinst list 1
2 Loop {}
---------
Command: browseinst detail 1
X(BSVModule)  = mkDesign
X(BSVPath)    = 
X(DEBUG)      = BTop
X(LocalPath)  = 
X(Module)     = 
X(Name)       = mkDesign
X(Node)       = Synthesized
X(SynthPath)  = 
X(UniqueName) = 
---------
Command: browseinst list 2
3 the_x_0 {}
4 the_x_1 {}
5 the_x_2 {}
6 the_x_3 {}
---------
Command: browseinst detail 2
X(BSVModule)   = mkDesign
X(BSVPath)     = Loop
X(DEBUG)       = BINode Loop Just (Integer)
X(IfcPosition) = Design.bsv 8 9
X(Interface)   = Integer
X(LocalPath)   = Loop
X(Name)        = Loop
X(Node)        = Instance
X(SynthPath)   = 
X(position)    = Design.bsv 8 4
---------
Command: browseinst list 3
7 {the_g  Reg#(Bit#(8))} prim
8 Loop {}
---------
Command: browseinst detail 3
X(BSVModule)   = mkDesign
X(BSVPath)     = Loop the_x_0
X(DEBUG)       = BINode the_x_0 Just (Empty)
X(IfcPosition) = Design.bsv 10 10
X(Interface)   = Empty
X(LocalPath)   = Loop the_x_0
X(Name)        = the_x_0
X(Node)        = Instance
X(SynthPath)   = 
X(position)    = Design.bsv 11 10
---------
Command: browseinst list 7
---------
Command: browseinst detail 7
X(BSVModule)   = mkDesign
X(BSVPath)     = Loop the_x_0 the_g
X(DEBUG)       = BLeaf the_g RegN Just ((Reg#(Bit#(8))))
X(IfcPosition) = Design.bsv 18 4
X(Interface)   = Reg#(Bit#(8))
X(LocalPath)   = 
X(Module)      = RegN
X(Name)        = the_g
X(Node)        = Primitive
X(SynthPath)   = the_x_0_the_g
X(UniqueName)  = the_x_0_the_g
X(position)    = Design.bsv 19 4
---------
Command: browseinst list 8
9 Body_0 {}
10 Body_1 {}
11 Body_2 {}
12 Body_3 {}
---------
Command: browseinst detail 8
X(BSVModule)   = mkDesign
X(BSVPath)     = Loop the_x_0 Loop
X(DEBUG)       = BINode Loop Just (Integer)
X(IfcPosition) = Design.bsv 8 9
X(Interface)   = Integer
X(LocalPath)   = Loop the_x_0 Loop
X(Name)        = Loop
X(Node)        = Instance
X(SynthPath)   = 
X(position)    = Design.bsv 22 4
---------
Command: browseinst list 9
13 {the_z  Reg#(Bit#(8))} prim
14 xyz {}
15 bax rule
---------
Command: browseinst detail 9
X(BSVModule)   = mkDesign
X(BSVPath)     = Loop the_x_0 Loop Body_0
X(DEBUG)       = BINode Body_0 Just (void)
X(IfcPosition) = Design.bsv 9 7
X(Interface)   = void
X(LocalPath)   = Loop the_x_0 Loop Body_0
X(Name)        = Body_0
X(Node)        = Instance
X(SynthPath)   = 
X(position)    = Design.bsv 23 7
---------
Command: browseinst list 13
---------
Command: browseinst detail 13
X(BSVModule)   = mkDesign
X(BSVPath)     = Loop the_x_0 Loop Body_0 the_z
X(DEBUG)       = BLeaf the_z RegN Just ((Reg#(Bit#(8))))
X(IfcPosition) = Design.bsv 18 4
X(Interface)   = Reg#(Bit#(8))
X(LocalPath)   = 
X(Module)      = RegN
X(Name)        = the_z
X(Node)        = Primitive
X(SynthPath)   = the_x_0_the_z_0
X(UniqueName)  = the_x_0_the_z_0
X(position)    = Design.bsv 25 10
---------
Command: browseinst list 14
16 baz rule
---------
Command: browseinst detail 14
X(BSVModule)   = mkDesign
X(BSVPath)     = Loop the_x_0 Loop Body_0 xyz
X(DEBUG)       = BINode xyz Just (Empty)
X(IfcPosition) = Design.bsv 10 10
X(Interface)   = Empty
X(LocalPath)   = Loop the_x_0 Loop Body_0 xyz
X(Name)        = xyz
X(Node)        = Instance
X(SynthPath)   = 
X(position)    = Design.bsv 27 16
---------
Command: browseinst list 16
---------
Command: browseinst detail 16
X(BSVModule) = mkDesign
X(BSVPath)   = Loop the_x_0 Loop Body_0 xyz baz
X(DEBUG)     = BRule baz (RL_the_x_0_xyz_0_baz)
X(LocalPath) = Loop the_x_0 Loop Body_0 xyz baz
X(Name)      = baz
X(Node)      = Rule
X(RuleName)  = RL_the_x_0_xyz_0_baz
X(SynthPath) = 
X(position)  = Design.bsv 39 9
---------
Command: browseinst list 15
---------
Command: browseinst detail 15
X(BSVModule) = mkDesign
X(BSVPath)   = Loop the_x_0 Loop Body_0 bax
X(DEBUG)     = BRule bax (RL_the_x_0_bax)
X(LocalPath) = Loop the_x_0 Loop Body_0 bax
X(Name)      = bax
X(Node)      = Rule
X(RuleName)  = RL_the_x_0_bax
X(SynthPath) = 
X(position)  = Design.bsv 29 15
---------
Command: browseinst list 10
17 {the_z  Reg#(Bit#(8))} prim
18 xyz {}
19 bax rule
---------
Command: browseinst detail 10
X(BSVModule)   = mkDesign
X(BSVPath)     = Loop the_x_0 Loop Body_1
X(DEBUG)       = BINode Body_1 Just (void)
X(IfcPosition) = Design.bsv 9 7
X(Interface)   = void
X(LocalPath)   = Loop the_x_0 Loop Body_1
X(Name)        = Body_1
X(Node)        = Instance
X(SynthPath)   = 
X(position)    = Design.bsv 23 7
---------
Command: browseinst list 17
---------
Command: browseinst detail 17
X(BSVModule)   = mkDesign
X(BSVPath)     = Loop the_x_0 Loop Body_1 the_z
X(DEBUG)       = BLeaf the_z RegN Just ((Reg#(Bit#(8))))
X(IfcPosition) = Design.bsv 18 4
X(Interface)   = Reg#(Bit#(8))
X(LocalPath)   = 
X(Module)      = RegN
X(Name)        = the_z
X(Node)        = Primitive
X(SynthPath)   = the_x_0_the_z_1
X(UniqueName)  = the_x_0_the_z_1
X(position)    = Design.bsv 25 10
---------
Command: browseinst list 18
20 baz rule
---------
Command: browseinst detail 18
X(BSVModule)   = mkDesign
X(BSVPath)     = Loop the_x_0 Loop Body_1 xyz
X(DEBUG)       = BINode xyz Just (Empty)
X(IfcPosition) = Design.bsv 10 10
X(Interface)   = Empty
X(LocalPath)   = Loop the_x_0 Loop Body_1 xyz
X(Name)        = xyz
X(Node)        = Instance
X(SynthPath)   = 
X(position)    = Design.bsv 27 16
---------
Command: browseinst list 20
---------
Command: browseinst detail 20
X(BSVModule) = mkDesign
X(BSVPath)   = Loop the_x_0 Loop Body_1 xyz baz
X(DEBUG)     = BRule baz (RL_the_x_0_xyz_1_baz)
X(LocalPath) = Loop the_x_0 Loop Body_1 xyz baz
X(Name)      = baz
X(Node)      = Rule
X(RuleName)  = RL_the_x_0_xyz_1_baz
X(SynthPath) = 
X(position)  = Design.bsv 39 9
---------
Command: browseinst list 19
---------
Command: browseinst detail 19
X(BSVModule) = mkDesign
X(BSVPath)   = Loop the_x_0 Loop Body_1 bax
X(DEBUG)     = BRule bax (RL_the_x_0_bax_1)
X(LocalPath) = Loop the_x_0 Loop Body_1 bax
X(Name)      = bax
X(Node)      = Rule
X(RuleName)  = RL_the_x_0_bax_1
X(SynthPath) = 
X(position)  = Design.bsv 29 15
---------
Command: browseinst list 11
21 {the_z  Reg#(Bit#(8))} prim
22 xyz {}
23 bax rule
---------
Command: browseinst detail 11
X(BSVModule)   = mkDesign
X(BSVPath)     = Loop the_x_0 Loop Body_2
X(DEBUG)       = BINode Body_2 Just (void)
X(IfcPosition) = Design.bsv 9 7
X(Interface)   = void
X(LocalPath)   = Loop the_x_0 Loop Body_2
X(Name)        = Body_2
X(Node)        = Instance
X(SynthPath)   = 
X(position)    = Design.bsv 23 7
---------
Command: browseinst list 21
---------
Command: browseinst detail 21
X(BSVModule)   = mkDesign
X(BSVPath)     = Loop the_x_0 Loop Body_2 the_z
X(DEBUG)       = BLeaf the_z RegN Just ((Reg#(Bit#(8))))
X(IfcPosition) = Design.bsv 18 4
X(Interface)   = Reg#(Bit#(8))
X(LocalPath)   = 
X(Module)      = RegN
X(Name)        = the_z
X(Node)        = Primitive
X(SynthPath)   = the_x_0_the_z_2
X(UniqueName)  = the_x_0_the_z_2
X(position)    = Design.bsv 25 10
---------
Command: browseinst list 22
24 baz rule
---------
Command: browseinst detail 22
X(BSVModule)   = mkDesign
X(BSVPath)     = Loop the_x_0 Loop Body_2 xyz
X(DEBUG)       = BINode xyz Just (Empty)
X(IfcPosition) = Design.bsv 10 10
X(Interface)   = Empty
X(LocalPath)   = Loop the_x_0 Loop Body_2 xyz
X(Name)        = xyz
X(Node)        = Instance
X(SynthPath)   = 
X(position)    = Design.bsv 27 16
---------
Command: browseinst list 24
---------
Command: browseinst detail 24
X(BSVModule) = mkDesign
X(BSVPath)   = Loop the_x_0 Loop Body_2 xyz baz
X(DEBUG)     = BRule baz (RL_the_x_0_xyz_2_baz)
X(LocalPath) = Loop the_x_0 Loop Body_2 xyz baz
X(Name)      = baz
X(Node)      = Rule
X(RuleName)  = RL_the_x_0_xyz_2_baz
X(SynthPath) = 
X(position)  = Design.bsv 39 9
---------
Command: browseinst list 23
---------
Command: browseinst detail 23
X(BSVModule) = mkDesign
X(BSVPath)   = Loop the_x_0 Loop Body_2 bax
X(DEBUG)     = BRule bax (RL_the_x_0_bax_2)
X(LocalPath) = Loop the_x_0 Loop Body_2 bax
X(Name)      = bax
X(Node)      = Rule
X(RuleName)  = RL_the_x_0_bax_2
X(SynthPath) = 
X(position)  = Design.bsv 29 15
---------
Command: browseinst list 12
25 {the_z  Reg#(Bit#(8))} prim
26 xyz {}
27 bax rule
---------
Command: browseinst detail 12
X(BSVModule)   = mkDesign
X(BSVPath)     = Loop the_x_0 Loop Body_3
X(DEBUG)       = BINode Body_3 Just (void)
X(IfcPosition) = Design.bsv 9 7
X(Interface)   = void
X(LocalPath)   = Loop the_x_0 Loop Body_3
X(Name)        = Body_3
X(Node)        = Instance
X(SynthPath)   = 
X(position)    = Design.bsv 23 7
---------
Command: browseinst list 25
---------
Command: browseinst detail 25
X(BSVModule)   = mkDesign
X(BSVPath)     = Loop the_x_0 Loop Body_3 the_z
X(DEBUG)       = BLeaf the_z RegN Just ((Reg#(Bit#(8))))
X(IfcPosition) = Design.bsv 18 4
X(Interface)   = Reg#(Bit#(8))
X(LocalPath)   = 
X(Module)      = RegN
X(Name)        = the_z
X(Node)        = Primitive
X(SynthPath)   = the_x_0_the_z_3
X(UniqueName)  = the_x_0_the_z_3
X(position)    = Design.bsv 25 10
---------
Command: browseinst list 26
28 baz rule
---------
Command: browseinst detail 26
X(BSVModule)   = mkDesign
X(BSVPath)     = Loop the_x_0 Loop Body_3 xyz
X(DEBUG)       = BINode xyz Just (Empty)
X(IfcPosition) = Design.bsv 10 10
X(Interface)   = Empty
X(LocalPath)   = Loop the_x_0 Loop Body_3 xyz
X(Name)        = xyz
X(Node)        = Instance
X(SynthPath)   = 
X(position)    = Design.bsv 27 16
---------
Command: browseinst list 28
---------
Command: browseinst detail 28
X(BSVModule) = mkDesign
X(BSVPath)   = Loop the_x_0 Loop Body_3 xyz baz
X(DEBUG)     = BRule baz (RL_the_x_0_xyz_3_baz)
X(LocalPath) = Loop the_x_0 Loop Body_3 xyz baz
X(Name)      = baz
X(Node)      = Rule
X(RuleName)  = RL_the_x_0_xyz_3_baz
X(SynthPath) = 
X(position)  = Design.bsv 39 9
---------
Command: browseinst list 27
---------
Command: browseinst detail 27
X(BSVModule) = mkDesign
X(BSVPath)   = Loop the_x_0 Loop Body_3 bax
X(DEBUG)     = BRule bax (RL_the_x_0_bax_3)
X(LocalPath) = Loop the_x_0 Loop Body_3 bax
X(Name)      = bax
X(Node)      = Rule
X(RuleName)  = RL_the_x_0_bax_3
X(SynthPath) = 
X(position)  = Design.bsv 29 15
---------
Command: browseinst list 4
29 {the_g  Reg#(Bit#(8))} prim
30 Loop {}
---------
Command: browseinst detail 4
X(BSVModule)   = mkDesign
X(BSVPath)     = Loop the_x_1
X(DEBUG)       = BINode the_x_1 Just (Empty)
X(IfcPosition) = Design.bsv 10 10
X(Interface)   = Empty
X(LocalPath)   = Loop the_x_1
X(Name)        = the_x_1
X(Node)        = Instance
X(SynthPath)   = 
X(position)    = Design.bsv 11 10
---------
Command: browseinst list 29
---------
Command: browseinst detail 29
X(BSVModule)   = mkDesign
X(BSVPath)     = Loop the_x_1 the_g
X(DEBUG)       = BLeaf the_g RegN Just ((Reg#(Bit#(8))))
X(IfcPosition) = Design.bsv 18 4
X(Interface)   = Reg#(Bit#(8))
X(LocalPath)   = 
X(Module)      = RegN
X(Name)        = the_g
X(Node)        = Primitive
X(SynthPath)   = the_x_1_the_g
X(UniqueName)  = the_x_1_the_g
X(position)    = Design.bsv 19 4
---------
Command: browseinst list 30
31 Body_0 {}
32 Body_1 {}
33 Body_2 {}
34 Body_3 {}
---------
Command: browseinst detail 30
X(BSVModule)   = mkDesign
X(BSVPath)     = Loop the_x_1 Loop
X(DEBUG)       = BINode Loop Just (Integer)
X(IfcPosition) = Design.bsv 8 9
X(Interface)   = Integer
X(LocalPath)   = Loop the_x_1 Loop
X(Name)        = Loop
X(Node)        = Instance
X(SynthPath)   = 
X(position)    = Design.bsv 22 4
---------
Command: browseinst list 31
35 {the_z  Reg#(Bit#(8))} prim
36 xyz {}
37 bax rule
---------
Command: browseinst detail 31
X(BSVModule)   = mkDesign
X(BSVPath)     = Loop the_x_1 Loop Body_0
X(DEBUG)       = BINode Body_0 Just (void)
X(IfcPosition) = Design.bsv 9 7
X(Interface)   = void
X(LocalPath)   = Loop the_x_1 Loop Body_0
X(Name)        = Body_0
X(Node)        = Instance
X(SynthPath)   = 
X(position)    = Design.bsv 23 7
---------
Command: browseinst list 35
---------
Command: browseinst detail 35
X(BSVModule)   = mkDesign
X(BSVPath)     = Loop the_x_1 Loop Body_0 the_z
X(DEBUG)       = BLeaf the_z RegN Just ((Reg#(Bit#(8))))
X(IfcPosition) = Design.bsv 18 4
X(Interface)   = Reg#(Bit#(8))
X(LocalPath)   = 
X(Module)      = RegN
X(Name)        = the_z
X(Node)        = Primitive
X(SynthPath)   = the_x_1_the_z_0
X(UniqueName)  = the_x_1_the_z_0
X(position)    = Design.bsv 25 10
---------
Command: browseinst list 36
38 baz rule
---------
Command: browseinst detail 36
X(BSVModule)   = mkDesign
X(BSVPath)     = Loop the_x_1 Loop Body_0 xyz
X(DEBUG)       = BINode xyz Just (Empty)
X(IfcPosition) = Design.bsv 10 10
X(Interface)   = Empty
X(LocalPath)   = Loop the_x_1 Loop Body_0 xyz
X(Name)        = xyz
X(Node)        = Instance
X(SynthPath)   = 
X(position)    = Design.bsv 27 16
---------
Command: browseinst list 38
---------
Command: browseinst detail 38
X(BSVModule) = mkDesign
X(BSVPath)   = Loop the_x_1 Loop Body_0 xyz baz
X(DEBUG)     = BRule baz (RL_the_x_1_xyz_0_baz)
X(LocalPath) = Loop the_x_1 Loop Body_0 xyz baz
X(Name)      = baz
X(Node)      = Rule
X(RuleName)  = RL_the_x_1_xyz_0_baz
X(SynthPath) = 
X(position)  = Design.bsv 39 9
---------
Command: browseinst list 37
---------
Command: browseinst detail 37
X(BSVModule) = mkDesign
X(BSVPath)   = Loop the_x_1 Loop Body_0 bax
X(DEBUG)     = BRule bax (RL_the_x_1_bax)
X(LocalPath) = Loop the_x_1 Loop Body_0 bax
X(Name)      = bax
X(Node)      = Rule
X(RuleName)  = RL_the_x_1_bax
X(SynthPath) = 
X(position)  = Design.bsv 29 15
---------
Command: browseinst list 32
39 {the_z  Reg#(Bit#(8))} prim
40 xyz {}
41 bax rule
---------
Command: browseinst detail 32
X(BSVModule)   = mkDesign
X(BSVPath)     = Loop the_x_1 Loop Body_1
X(DEBUG)       = BINode Body_1 Just (void)
X(IfcPosition) = Design.bsv 9 7
X(Interface)   = void
X(LocalPath)   = Loop the_x_1 Loop Body_1
X(Name)        = Body_1
X(Node)        = Instance
X(SynthPath)   = 
X(position)    = Design.bsv 23 7
---------
Command: browseinst list 39
---------
Command: browseinst detail 39
X(BSVModule)   = mkDesign
X(BSVPath)     = Loop the_x_1 Loop Body_1 the_z
X(DEBUG)       = BLeaf the_z RegN Just ((Reg#(Bit#(8))))
X(IfcPosition) = Design.bsv 18 4
X(Interface)   = Reg#(Bit#(8))
X(LocalPath)   = 
X(Module)      = RegN
X(Name)        = the_z
X(Node)        = Primitive
X(SynthPath)   = the_x_1_the_z_1
X(UniqueName)  = the_x_1_the_z_1
X(position)    = Design.bsv 25 10
---------
Command: browseinst list 40
42 baz rule
---------
Command: browseinst detail 40
X(BSVModule)   = mkDesign
X(BSVPath)     = Loop the_x_1 Loop Body_1 xyz
X(DEBUG)       = BINode xyz Just (Empty)
X(IfcPosition) = Design.bsv 10 10
X(Interface)   = Empty
X(LocalPath)   = Loop the_x_1 Loop Body_1 xyz
X(Name)        = xyz
X(Node)        = Instance
X(SynthPath)   = 
X(position)    = Design.bsv 27 16
---------
Command: browseinst list 42
---------
Command: browseinst detail 42
X(BSVModule) = mkDesign
X(BSVPath)   = Loop the_x_1 Loop Body_1 xyz baz
X(DEBUG)     = BRule baz (RL_the_x_1_xyz_1_baz)
X(LocalPath) = Loop the_x_1 Loop Body_1 xyz baz
X(Name)      = baz
X(Node)      = Rule
X(RuleName)  = RL_the_x_1_xyz_1_baz
X(SynthPath) = 
X(position)  = Design.bsv 39 9
---------
Command: browseinst list 41
---------
Command: browseinst detail 41
X(BSVModule) = mkDesign
X(BSVPath)   = Loop the_x_1 Loop Body_1 bax
X(DEBUG)     = BRule bax (RL_the_x_1_bax_1)
X(LocalPath) = Loop the_x_1 Loop Body_1 bax
X(Name)      = bax
X(Node)      = Rule
X(RuleName)  = RL_the_x_1_bax_1
X(SynthPath) = 
X(position)  = Design.bsv 29 15
---------
Command: browseinst list 33
43 {the_z  Reg#(Bit#(8))} prim
44 xyz {}
45 bax rule
---------
Command: browseinst detail 33
X(BSVModule)   = mkDesign
X(BSVPath)     = Loop the_x_1 Loop Body_2
X(DEBUG)       = BINode Body_2 Just (void)
X(IfcPosition) = Design.bsv 9 7
X(Interface)   = void
X(LocalPath)   = Loop the_x_1 Loop Body_2
X(Name)        = Body_2
X(Node)        = Instance
X(SynthPath)   = 
X(position)    = Design.bsv 23 7
---------
Command: browseinst list 43
---------
Command: browseinst detail 43
X(BSVModule)   = mkDesign
X(BSVPath)     = Loop the_x_1 Loop Body_2 the_z
X(DEBUG)       = BLeaf the_z RegN Just ((Reg#(Bit#(8))))
X(IfcPosition) = Design.bsv 18 4
X(Interface)   = Reg#(Bit#(8))
X(LocalPath)   = 
X(Module)      = RegN
X(Name)        = the_z
X(Node)        = Primitive
X(SynthPath)   = the_x_1_the_z_2
X(UniqueName)  = the_x_1_the_z_2
X(position)    = Design.bsv 25 10
---------
Command: browseinst list 44
46 baz rule
---------
Command: browseinst detail 44
X(BSVModule)   = mkDesign
X(BSVPath)     = Loop the_x_1 Loop Body_2 xyz
X(DEBUG)       = BINode xyz Just (Empty)
X(IfcPosition) = Design.bsv 10 10
X(Interface)   = Empty
X(LocalPath)   = Loop the_x_1 Loop Body_2 xyz
X(Name)        = xyz
X(Node)        = Instance
X(SynthPath)   = 
X(position)    = Design.bsv 27 16
---------
Command: browseinst list 46
---------
Command: browseinst detail 46
X(BSVModule) = mkDesign
X(BSVPath)   = Loop the_x_1 Loop Body_2 xyz baz
X(DEBUG)     = BRule baz (RL_the_x_1_xyz_2_baz)
X(LocalPath) = Loop the_x_1 Loop Body_2 xyz baz
X(Name)      = baz
X(Node)      = Rule
X(RuleName)  = RL_the_x_1_xyz_2_baz
X(SynthPath) = 
X(position)  = Design.bsv 39 9
---------
Command: browseinst list 45
---------
Command: browseinst detail 45
X(BSVModule) = mkDesign
X(BSVPath)   = Loop the_x_1 Loop Body_2 bax
X(DEBUG)     = BRule bax (RL_the_x_1_bax_2)
X(LocalPath) = Loop the_x_1 Loop Body_2 bax
X(Name)      = bax
X(Node)      = Rule
X(RuleName)  = RL_the_x_1_bax_2
X(SynthPath) = 
X(position)  = Design.bsv 29 15
---------
Command: browseinst list 34
47 {the_z  Reg#(Bit#(8))} prim
48 xyz {}
49 bax rule
---------
Command: browseinst detail 34
X(BSVModule)   = mkDesign
X(BSVPath)     = Loop the_x_1 Loop Body_3
X(DEBUG)       = BINode Body_3 Just (void)
X(IfcPosition) = Design.bsv 9 7
X(Interface)   = void
X(LocalPath)   = Loop the_x_1 Loop Body_3
X(Name)        = Body_3
X(Node)        = Instance
X(SynthPath)   = 
X(position)    = Design.bsv 23 7
---------
Command: browseinst list 47
---------
Command: browseinst detail 47
X(BSVModule)   = mkDesign
X(BSVPath)     = Loop the_x_1 Loop Body_3 the_z
X(DEBUG)       = BLeaf the_z RegN Just ((Reg#(Bit#(8))))
X(IfcPosition) = Design.bsv 18 4
X(Interface)   = Reg#(Bit#(8))
X(LocalPath)   = 
X(Module)      = RegN
X(Name)        = the_z
X(Node)        = Primitive
X(SynthPath)   = the_x_1_the_z_3
X(UniqueName)  = the_x_1_the_z_3
X(position)    = Design.bsv 25 10
---------
Command: browseinst list 48
50 baz rule
---------
Command: browseinst detail 48
X(BSVModule)   = mkDesign
X(BSVPath)     = Loop the_x_1 Loop Body_3 xyz
X(DEBUG)       = BINode xyz Just (Empty)
X(IfcPosition) = Design.bsv 10 10
X(Interface)   = Empty
X(LocalPath)   = Loop the_x_1 Loop Body_3 xyz
X(Name)        = xyz
X(Node)        = Instance
X(SynthPath)   = 
X(position)    = Design.bsv 27 16
---------
Command: browseinst list 50
---------
Command: browseinst detail 50
X(BSVModule) = mkDesign
X(BSVPath)   = Loop the_x_1 Loop Body_3 xyz baz
X(DEBUG)     = BRule baz (RL_the_x_1_xyz_3_baz)
X(LocalPath) = Loop the_x_1 Loop Body_3 xyz baz
X(Name)      = baz
X(Node)      = Rule
X(RuleName)  = RL_the_x_1_xyz_3_baz
X(SynthPath) = 
X(position)  = Design.bsv 39 9
---------
Command: browseinst list 49
---------
Command: browseinst detail 49
X(BSVModule) = mkDesign
X(BSVPath)   = Loop the_x_1 Loop Body_3 bax
X(DEBUG)     = BRule bax (RL_the_x_1_bax_3)
X(LocalPath) = Loop the_x_1 Loop Body_3 bax
X(Name)      = bax
X(Node)      = Rule
X(RuleName)  = RL_the_x_1_bax_3
X(SynthPath) = 
X(position)  = Design.bsv 29 15
---------
Command: browseinst list 5
51 {the_g  Reg#(Bit#(8))} prim
52 Loop {}
---------
Command: browseinst detail 5
X(BSVModule)   = mkDesign
X(BSVPath)     = Loop the_x_2
X(DEBUG)       = BINode the_x_2 Just (Empty)
X(IfcPosition) = Design.bsv 10 10
X(Interface)   = Empty
X(LocalPath)   = Loop the_x_2
X(Name)        = the_x_2
X(Node)        = Instance
X(SynthPath)   = 
X(position)    = Design.bsv 11 10
---------
Command: browseinst list 51
---------
Command: browseinst detail 51
X(BSVModule)   = mkDesign
X(BSVPath)     = Loop the_x_2 the_g
X(DEBUG)       = BLeaf the_g RegN Just ((Reg#(Bit#(8))))
X(IfcPosition) = Design.bsv 18 4
X(Interface)   = Reg#(Bit#(8))
X(LocalPath)   = 
X(Module)      = RegN
X(Name)        = the_g
X(Node)        = Primitive
X(SynthPath)   = the_x_2_the_g
X(UniqueName)  = the_x_2_the_g
X(position)    = Design.bsv 19 4
---------
Command: browseinst list 52
53 Body_0 {}
54 Body_1 {}
55 Body_2 {}
56 Body_3 {}
---------
Command: browseinst detail 52
X(BSVModule)   = mkDesign
X(BSVPath)     = Loop the_x_2 Loop
X(DEBUG)       = BINode Loop Just (Integer)
X(IfcPosition) = Design.bsv 8 9
X(Interface)   = Integer
X(LocalPath)   = Loop the_x_2 Loop
X(Name)        = Loop
X(Node)        = Instance
X(SynthPath)   = 
X(position)    = Design.bsv 22 4
---------
Command: browseinst list 53
57 {the_z  Reg#(Bit#(8))} prim
58 xyz {}
59 bax rule
---------
Command: browseinst detail 53
X(BSVModule)   = mkDesign
X(BSVPath)     = Loop the_x_2 Loop Body_0
X(DEBUG)       = BINode Body_0 Just (void)
X(IfcPosition) = Design.bsv 9 7
X(Interface)   = void
X(LocalPath)   = Loop the_x_2 Loop Body_0
X(Name)        = Body_0
X(Node)        = Instance
X(SynthPath)   = 
X(position)    = Design.bsv 23 7
---------
Command: browseinst list 57
---------
Command: browseinst detail 57
X(BSVModule)   = mkDesign
X(BSVPath)     = Loop the_x_2 Loop Body_0 the_z
X(DEBUG)       = BLeaf the_z RegN Just ((Reg#(Bit#(8))))
X(IfcPosition) = Design.bsv 18 4
X(Interface)   = Reg#(Bit#(8))
X(LocalPath)   = 
X(Module)      = RegN
X(Name)        = the_z
X(Node)        = Primitive
X(SynthPath)   = the_x_2_the_z_0
X(UniqueName)  = the_x_2_the_z_0
X(position)    = Design.bsv 25 10
---------
Command: browseinst list 58
60 baz rule
---------
Command: browseinst detail 58
X(BSVModule)   = mkDesign
X(BSVPath)     = Loop the_x_2 Loop Body_0 xyz
X(DEBUG)       = BINode xyz Just (Empty)
X(IfcPosition) = Design.bsv 10 10
X(Interface)   = Empty
X(LocalPath)   = Loop the_x_2 Loop Body_0 xyz
X(Name)        = xyz
X(Node)        = Instance
X(SynthPath)   = 
X(position)    = Design.bsv 27 16
---------
Command: browseinst list 60
---------
Command: browseinst detail 60
X(BSVModule) = mkDesign
X(BSVPath)   = Loop the_x_2 Loop Body_0 xyz baz
X(DEBUG)     = BRule baz (RL_the_x_2_xyz_0_baz)
X(LocalPath) = Loop the_x_2 Loop Body_0 xyz baz
X(Name)      = baz
X(Node)      = Rule
X(RuleName)  = RL_the_x_2_xyz_0_baz
X(SynthPath) = 
X(position)  = Design.bsv 39 9
---------
Command: browseinst list 59
---------
Command: browseinst detail 59
X(BSVModule) = mkDesign
X(BSVPath)   = Loop the_x_2 Loop Body_0 bax
X(DEBUG)     = BRule bax (RL_the_x_2_bax)
X(LocalPath) = Loop the_x_2 Loop Body_0 bax
X(Name)      = bax
X(Node)      = Rule
X(RuleName)  = RL_the_x_2_bax
X(SynthPath) = 
X(position)  = Design.bsv 29 15
---------
Command: browseinst list 54
61 {the_z  Reg#(Bit#(8))} prim
62 xyz {}
63 bax rule
---------
Command: browseinst detail 54
X(BSVModule)   = mkDesign
X(BSVPath)     = Loop the_x_2 Loop Body_1
X(DEBUG)       = BINode Body_1 Just (void)
X(IfcPosition) = Design.bsv 9 7
X(Interface)   = void
X(LocalPath)   = Loop the_x_2 Loop Body_1
X(Name)        = Body_1
X(Node)        = Instance
X(SynthPath)   = 
X(position)    = Design.bsv 23 7
---------
Command: browseinst list 61
---------
Command: browseinst detail 61
X(BSVModule)   = mkDesign
X(BSVPath)     = Loop the_x_2 Loop Body_1 the_z
X(DEBUG)       = BLeaf the_z RegN Just ((Reg#(Bit#(8))))
X(IfcPosition) = Design.bsv 18 4
X(Interface)   = Reg#(Bit#(8))
X(LocalPath)   = 
X(Module)      = RegN
X(Name)        = the_z
X(Node)        = Primitive
X(SynthPath)   = the_x_2_the_z_1
X(UniqueName)  = the_x_2_the_z_1
X(position)    = Design.bsv 25 10
---------
Command: browseinst list 62
64 baz rule
---------
Command: browseinst detail 62
X(BSVModule)   = mkDesign
X(BSVPath)     = Loop the_x_2 Loop Body_1 xyz
X(DEBUG)       = BINode xyz Just (Empty)
X(IfcPosition) = Design.bsv 10 10
X(Interface)   = Empty
X(LocalPath)   = Loop the_x_2 Loop Body_1 xyz
X(Name)        = xyz
X(Node)        = Instance
X(SynthPath)   = 
X(position)    = Design.bsv 27 16
---------
Command: browseinst list 64
---------
Command: browseinst detail 64
X(BSVModule) = mkDesign
X(BSVPath)   = Loop the_x_2 Loop Body_1 xyz baz
X(DEBUG)     = BRule baz (RL_the_x_2_xyz_1_baz)
X(LocalPath) = Loop the_x_2 Loop Body_1 xyz baz
X(Name)      = baz
X(Node)      = Rule
X(RuleName)  = RL_the_x_2_xyz_1_baz
X(SynthPath) = 
X(position)  = Design.bsv 39 9
---------
Command: browseinst list 63
---------
Command: browseinst detail 63
X(BSVModule) = mkDesign
X(BSVPath)   = Loop the_x_2 Loop Body_1 bax
X(DEBUG)     = BRule bax (RL_the_x_2_bax_1)
X(LocalPath) = Loop the_x_2 Loop Body_1 bax
X(Name)      = bax
X(Node)      = Rule
X(RuleName)  = RL_the_x_2_bax_1
X(SynthPath) = 
X(position)  = Design.bsv 29 15
---------
Command: browseinst list 55
65 {the_z  Reg#(Bit#(8))} prim
66 xyz {}
67 bax rule
---------
Command: browseinst detail 55
X(BSVModule)   = mkDesign
X(BSVPath)     = Loop the_x_2 Loop Body_2
X(DEBUG)       = BINode Body_2 Just (void)
X(IfcPosition) = Design.bsv 9 7
X(Interface)   = void
X(LocalPath)   = Loop the_x_2 Loop Body_2
X(Name)        = Body_2
X(Node)        = Instance
X(SynthPath)   = 
X(position)    = Design.bsv 23 7
---------
Command: browseinst list 65
---------
Command: browseinst detail 65
X(BSVModule)   = mkDesign
X(BSVPath)     = Loop the_x_2 Loop Body_2 the_z
X(DEBUG)       = BLeaf the_z RegN Just ((Reg#(Bit#(8))))
X(IfcPosition) = Design.bsv 18 4
X(Interface)   = Reg#(Bit#(8))
X(LocalPath)   = 
X(Module)      = RegN
X(Name)        = the_z
X(Node)        = Primitive
X(SynthPath)   = the_x_2_the_z_2
X(UniqueName)  = the_x_2_the_z_2
X(position)    = Design.bsv 25 10
---------
Command: browseinst list 66
68 baz rule
---------
Command: browseinst detail 66
X(BSVModule)   = mkDesign
X(BSVPath)     = Loop the_x_2 Loop Body_2 xyz
X(DEBUG)       = BINode xyz Just (Empty)
X(IfcPosition) = Design.bsv 10 10
X(Interface)   = Empty
X(LocalPath)   = Loop the_x_2 Loop Body_2 xyz
X(Name)        = xyz
X(Node)        = Instance
X(SynthPath)   = 
X(position)    = Design.bsv 27 16
---------
Command: browseinst list 68
---------
Command: browseinst detail 68
X(BSVModule) = mkDesign
X(BSVPath)   = Loop the_x_2 Loop Body_2 xyz baz
X(DEBUG)     = BRule baz (RL_the_x_2_xyz_2_baz)
X(LocalPath) = Loop the_x_2 Loop Body_2 xyz baz
X(Name)      = baz
X(Node)      = Rule
X(RuleName)  = RL_the_x_2_xyz_2_baz
X(SynthPath) = 
X(position)  = Design.bsv 39 9
---------
Command: browseinst list 67
---------
Command: browseinst detail 67
X(BSVModule) = mkDesign
X(BSVPath)   = Loop the_x_2 Loop Body_2 bax
X(DEBUG)     = BRule bax (RL_the_x_2_bax_2)
X(LocalPath) = Loop the_x_2 Loop Body_2 bax
X(Name)      = bax
X(Node)      = Rule
X(RuleName)  = RL_the_x_2_bax_2
X(SynthPath) = 
X(position)  = Design.bsv 29 15
---------
Command: browseinst list 56
69 {the_z  Reg#(Bit#(8))} prim
70 xyz {}
71 bax rule
---------
Command: browseinst detail 56
X(BSVModule)   = mkDesign
X(BSVPath)     = Loop the_x_2 Loop Body_3
X(DEBUG)       = BINode Body_3 Just (void)
X(IfcPosition) = Design.bsv 9 7
X(Interface)   = void
X(LocalPath)   = Loop the_x_2 Loop Body_3
X(Name)        = Body_3
X(Node)        = Instance
X(SynthPath)   = 
X(position)    = Design.bsv 23 7
---------
Command: browseinst list 69
---------
Command: browseinst detail 69
X(BSVModule)   = mkDesign
X(BSVPath)     = Loop the_x_2 Loop Body_3 the_z
X(DEBUG)       = BLeaf the_z RegN Just ((Reg#(Bit#(8))))
X(IfcPosition) = Design.bsv 18 4
X(Interface)   = Reg#(Bit#(8))
X(LocalPath)   = 
X(Module)      = RegN
X(Name)        = the_z
X(Node)        = Primitive
X(SynthPath)   = the_x_2_the_z_3
X(UniqueName)  = the_x_2_the_z_3
X(position)    = Design.bsv 25 10
---------
Command: browseinst list 70
72 baz rule
---------
Command: browseinst detail 70
X(BSVModule)   = mkDesign
X(BSVPath)     = Loop the_x_2 Loop Body_3 xyz
X(DEBUG)       = BINode xyz Just (Empty)
X(IfcPosition) = Design.bsv 10 10
X(Interface)   = Empty
X(LocalPath)   = Loop the_x_2 Loop Body_3 xyz
X(Name)        = xyz
X(Node)        = Instance
X(SynthPath)   = 
X(position)    = Design.bsv 27 16
---------
Command: browseinst list 72
---------
Command: browseinst detail 72
X(BSVModule) = mkDesign
X(BSVPath)   = Loop the_x_2 Loop Body_3 xyz baz
X(DEBUG)     = BRule baz (RL_the_x_2_xyz_3_baz)
X(LocalPath) = Loop the_x_2 Loop Body_3 xyz baz
X(Name)      = baz
X(Node)      = Rule
X(RuleName)  = RL_the_x_2_xyz_3_baz
X(SynthPath) = 
X(position)  = Design.bsv 39 9
---------
Command: browseinst list 71
---------
Command: browseinst detail 71
X(BSVModule) = mkDesign
X(BSVPath)   = Loop the_x_2 Loop Body_3 bax
X(DEBUG)     = BRule bax (RL_the_x_2_bax_3)
X(LocalPath) = Loop the_x_2 Loop Body_3 bax
X(Name)      = bax
X(Node)      = Rule
X(RuleName)  = RL_the_x_2_bax_3
X(SynthPath) = 
X(position)  = Design.bsv 29 15
---------
Command: browseinst list 6
73 {the_g  Reg#(Bit#(8))} prim
74 Loop {}
---------
Command: browseinst detail 6
X(BSVModule)   = mkDesign
X(BSVPath)     = Loop the_x_3
X(DEBUG)       = BINode the_x_3 Just (Empty)
X(IfcPosition) = Design.bsv 10 10
X(Interface)   = Empty
X(LocalPath)   = Loop the_x_3
X(Name)        = the_x_3
X(Node)        = Instance
X(SynthPath)   = 
X(position)    = Design.bsv 11 10
---------
Command: browseinst list 73
---------
Command: browseinst detail 73
X(BSVModule)   = mkDesign
X(BSVPath)     = Loop the_x_3 the_g
X(DEBUG)       = BLeaf the_g RegN Just ((Reg#(Bit#(8))))
X(IfcPosition) = Design.bsv 18 4
X(Interface)   = Reg#(Bit#(8))
X(LocalPath)   = 
X(Module)      = RegN
X(Name)        = the_g
X(Node)        = Primitive
X(SynthPath)   = the_x_3_the_g
X(UniqueName)  = the_x_3_the_g
X(position)    = Design.bsv 19 4
---------
Command: browseinst list 74
75 Body_0 {}
76 Body_1 {}
77 Body_2 {}
78 Body_3 {}
---------
Command: browseinst detail 74
X(BSVModule)   = mkDesign
X(BSVPath)     = Loop the_x_3 Loop
X(DEBUG)       = BINode Loop Just (Integer)
X(IfcPosition) = Design.bsv 8 9
X(Interface)   = Integer
X(LocalPath)   = Loop the_x_3 Loop
X(Name)        = Loop
X(Node)        = Instance
X(SynthPath)   = 
X(position)    = Design.bsv 22 4
---------
Command: browseinst list 75
79 {the_z  Reg#(Bit#(8))} prim
80 xyz {}
81 bax rule
---------
Command: browseinst detail 75
X(BSVModule)   = mkDesign
X(BSVPath)     = Loop the_x_3 Loop Body_0
X(DEBUG)       = BINode Body_0 Just (void)
X(IfcPosition) = Design.bsv 9 7
X(Interface)   = void
X(LocalPath)   = Loop the_x_3 Loop Body_0
X(Name)        = Body_0
X(Node)        = Instance
X(SynthPath)   = 
X(position)    = Design.bsv 23 7
---------
Command: browseinst list 79
---------
Command: browseinst detail 79
X(BSVModule)   = mkDesign
X(BSVPath)     = Loop the_x_3 Loop Body_0 the_z
X(DEBUG)       = BLeaf the_z RegN Just ((Reg#(Bit#(8))))
X(IfcPosition) = Design.bsv 18 4
X(Interface)   = Reg#(Bit#(8))
X(LocalPath)   = 
X(Module)      = RegN
X(Name)        = the_z
X(Node)        = Primitive
X(SynthPath)   = the_x_3_the_z_0
X(UniqueName)  = the_x_3_the_z_0
X(position)    = Design.bsv 25 10
---------
Command: browseinst list 80
82 baz rule
---------
Command: browseinst detail 80
X(BSVModule)   = mkDesign
X(BSVPath)     = Loop the_x_3 Loop Body_0 xyz
X(DEBUG)       = BINode xyz Just (Empty)
X(IfcPosition) = Design.bsv 10 10
X(Interface)   = Empty
X(LocalPath)   = Loop the_x_3 Loop Body_0 xyz
X(Name)        = xyz
X(Node)        = Instance
X(SynthPath)   = 
X(position)    = Design.bsv 27 16
---------
Command: browseinst list 82
---------
Command: browseinst detail 82
X(BSVModule) = mkDesign
X(BSVPath)   = Loop the_x_3 Loop Body_0 xyz baz
X(DEBUG)     = BRule baz (RL_the_x_3_xyz_0_baz)
X(LocalPath) = Loop the_x_3 Loop Body_0 xyz baz
X(Name)      = baz
X(Node)      = Rule
X(RuleName)  = RL_the_x_3_xyz_0_baz
X(SynthPath) = 
X(position)  = Design.bsv 39 9
---------
Command: browseinst list 81
---------
Command: browseinst detail 81
X(BSVModule) = mkDesign
X(BSVPath)   = Loop the_x_3 Loop Body_0 bax
X(DEBUG)     = BRule bax (RL_the_x_3_bax)
X(LocalPath) = Loop the_x_3 Loop Body_0 bax
X(Name)      = bax
X(Node)      = Rule
X(RuleName)  = RL_the_x_3_bax
X(SynthPath) = 
X(position)  = Design.bsv 29 15
---------
Command: browseinst list 76
83 {the_z  Reg#(Bit#(8))} prim
84 xyz {}
85 bax rule
---------
Command: browseinst detail 76
X(BSVModule)   = mkDesign
X(BSVPath)     = Loop the_x_3 Loop Body_1
X(DEBUG)       = BINode Body_1 Just (void)
X(IfcPosition) = Design.bsv 9 7
X(Interface)   = void
X(LocalPath)   = Loop the_x_3 Loop Body_1
X(Name)        = Body_1
X(Node)        = Instance
X(SynthPath)   = 
X(position)    = Design.bsv 23 7
---------
Command: browseinst list 83
---------
Command: browseinst detail 83
X(BSVModule)   = mkDesign
X(BSVPath)     = Loop the_x_3 Loop Body_1 the_z
X(DEBUG)       = BLeaf the_z RegN Just ((Reg#(Bit#(8))))
X(IfcPosition) = Design.bsv 18 4
X(Interface)   = Reg#(Bit#(8))
X(LocalPath)   = 
X(Module)      = RegN
X(Name)        = the_z
X(Node)        = Primitive
X(SynthPath)   = the_x_3_the_z_1
X(UniqueName)  = the_x_3_the_z_1
X(position)    = Design.bsv 25 10
---------
Command: browseinst list 84
86 baz rule
---------
Command: browseinst detail 84
X(BSVModule)   = mkDesign
X(BSVPath)     = Loop the_x_3 Loop Body_1 xyz
X(DEBUG)       = BINode xyz Just (Empty)
X(IfcPosition) = Design.bsv 10 10
X(Interface)   = Empty
X(LocalPath)   = Loop the_x_3 Loop Body_1 xyz
X(Name)        = xyz
X(Node)        = Instance
X(SynthPath)   = 
X(position)    = Design.bsv 27 16
---------
Command: browseinst list 86
---------
Command: browseinst detail 86
X(BSVModule) = mkDesign
X(BSVPath)   = Loop the_x_3 Loop Body_1 xyz baz
X(DEBUG)     = BRule baz (RL_the_x_3_xyz_1_baz)
X(LocalPath) = Loop the_x_3 Loop Body_1 xyz baz
X(Name)      = baz
X(Node)      = Rule
X(RuleName)  = RL_the_x_3_xyz_1_baz
X(SynthPath) = 
X(position)  = Design.bsv 39 9
---------
Command: browseinst list 85
---------
Command: browseinst detail 85
X(BSVModule) = mkDesign
X(BSVPath)   = Loop the_x_3 Loop Body_1 bax
X(DEBUG)     = BRule bax (RL_the_x_3_bax_1)
X(LocalPath) = Loop the_x_3 Loop Body_1 bax
X(Name)      = bax
X(Node)      = Rule
X(RuleName)  = RL_the_x_3_bax_1
X(SynthPath) = 
X(position)  = Design.bsv 29 15
---------
Command: browseinst list 77
87 {the_z  Reg#(Bit#(8))} prim
88 xyz {}
89 bax rule
---------
Command: browseinst detail 77
X(BSVModule)   = mkDesign
X(BSVPath)     = Loop the_x_3 Loop Body_2
X(DEBUG)       = BINode Body_2 Just (void)
X(IfcPosition) = Design.bsv 9 7
X(Interface)   = void
X(LocalPath)   = Loop the_x_3 Loop Body_2
X(Name)        = Body_2
X(Node)        = Instance
X(SynthPath)   = 
X(position)    = Design.bsv 23 7
---------
Command: browseinst list 87
---------
Command: browseinst detail 87
X(BSVModule)   = mkDesign
X(BSVPath)     = Loop the_x_3 Loop Body_2 the_z
X(DEBUG)       = BLeaf the_z RegN Just ((Reg#(Bit#(8))))
X(IfcPosition) = Design.bsv 18 4
X(Interface)   = Reg#(Bit#(8))
X(LocalPath)   = 
X(Module)      = RegN
X(Name)        = the_z
X(Node)        = Primitive
X(SynthPath)   = the_x_3_the_z_2
X(UniqueName)  = the_x_3_the_z_2
X(position)    = Design.bsv 25 10
---------
Command: browseinst list 88
90 baz rule
---------
Command: browseinst detail 88
X(BSVModule)   = mkDesign
X(BSVPath)     = Loop the_x_3 Loop Body_2 xyz
X(DEBUG)       = BINode xyz Just (Empty)
X(IfcPosition) = Design.bsv 10 10
X(Interface)   = Empty
X(LocalPath)   = Loop the_x_3 Loop Body_2 xyz
X(Name)        = xyz
X(Node)        = Instance
X(SynthPath)   = 
X(position)    = Design.bsv 27 16
---------
Command: browseinst list 90
---------
Command: browseinst detail 90
X(BSVModule) = mkDesign
X(BSVPath)   = Loop the_x_3 Loop Body_2 xyz baz
X(DEBUG)     = BRule baz (RL_the_x_3_xyz_2_baz)
X(LocalPath) = Loop the_x_3 Loop Body_2 xyz baz
X(Name)      = baz
X(Node)      = Rule
X(RuleName)  = RL_the_x_3_xyz_2_baz
X(SynthPath) = 
X(position)  = Design.bsv 39 9
---------
Command: browseinst list 89
---------
Command: browseinst detail 89
X(BSVModule) = mkDesign
X(BSVPath)   = Loop the_x_3 Loop Body_2 bax
X(DEBUG)     = BRule bax (RL_the_x_3_bax_2)
X(LocalPath) = Loop the_x_3 Loop Body_2 bax
X(Name)      = bax
X(Node)      = Rule
X(RuleName)  = RL_the_x_3_bax_2
X(SynthPath) = 
X(position)  = Design.bsv 29 15
---------
Command: browseinst list 78
91 {the_z  Reg#(Bit#(8))} prim
92 xyz {}
93 bax rule
---------
Command: browseinst detail 78
X(BSVModule)   = mkDesign
X(BSVPath)     = Loop the_x_3 Loop Body_3
X(DEBUG)       = BINode Body_3 Just (void)
X(IfcPosition) = Design.bsv 9 7
X(Interface)   = void
X(LocalPath)   = Loop the_x_3 Loop Body_3
X(Name)        = Body_3
X(Node)        = Instance
X(SynthPath)   = 
X(position)    = Design.bsv 23 7
---------
Command: browseinst list 91
---------
Command: browseinst detail 91
X(BSVModule)   = mkDesign
X(BSVPath)     = Loop the_x_3 Loop Body_3 the_z
X(DEBUG)       = BLeaf the_z RegN Just ((Reg#(Bit#(8))))
X(IfcPosition) = Design.bsv 18 4
X(Interface)   = Reg#(Bit#(8))
X(LocalPath)   = 
X(Module)      = RegN
X(Name)        = the_z
X(Node)        = Primitive
X(SynthPath)   = the_x_3_the_z_3
X(UniqueName)  = the_x_3_the_z_3
X(position)    = Design.bsv 25 10
---------
Command: browseinst list 92
94 baz rule
---------
Command: browseinst detail 92
X(BSVModule)   = mkDesign
X(BSVPath)     = Loop the_x_3 Loop Body_3 xyz
X(DEBUG)       = BINode xyz Just (Empty)
X(IfcPosition) = Design.bsv 10 10
X(Interface)   = Empty
X(LocalPath)   = Loop the_x_3 Loop Body_3 xyz
X(Name)        = xyz
X(Node)        = Instance
X(SynthPath)   = 
X(position)    = Design.bsv 27 16
---------
Command: browseinst list 94
---------
Command: browseinst detail 94
X(BSVModule) = mkDesign
X(BSVPath)   = Loop the_x_3 Loop Body_3 xyz baz
X(DEBUG)     = BRule baz (RL_the_x_3_xyz_3_baz)
X(LocalPath) = Loop the_x_3 Loop Body_3 xyz baz
X(Name)      = baz
X(Node)      = Rule
X(RuleName)  = RL_the_x_3_xyz_3_baz
X(SynthPath) = 
X(position)  = Design.bsv 39 9
---------
Command: browseinst list 93
---------
Command: browseinst detail 93
X(BSVModule) = mkDesign
X(BSVPath)   = Loop the_x_3 Loop Body_3 bax
X(DEBUG)     = BRule bax (RL_the_x_3_bax_3)
X(LocalPath) = Loop the_x_3 Loop Body_3 bax
X(Name)      = bax
X(Node)      = Rule
X(RuleName)  = RL_the_x_3_bax_3
X(SynthPath) = 
X(position)  = Design.bsv 29 15
---------
Command: browseinst debug
0 ROOT
1 mkDesign
2 Loop
3 the_x_0
4 the_x_1
5 the_x_2
6 the_x_3
7 {the_g  Reg#(Bit#(8))}
8 Loop
9 Body_0
10 Body_1
11 Body_2
12 Body_3
13 {the_z  Reg#(Bit#(8))}
14 xyz
15 bax
16 baz
17 {the_z  Reg#(Bit#(8))}
18 xyz
19 bax
20 baz
21 {the_z  Reg#(Bit#(8))}
22 xyz
23 bax
24 baz
25 {the_z  Reg#(Bit#(8))}
26 xyz
27 bax
28 baz
29 {the_g  Reg#(Bit#(8))}
30 Loop
31 Body_0
32 Body_1
33 Body_2
34 Body_3
35 {the_z  Reg#(Bit#(8))}
36 xyz
37 bax
38 baz
39 {the_z  Reg#(Bit#(8))}
40 xyz
41 bax
42 baz
43 {the_z  Reg#(Bit#(8))}
44 xyz
45 bax
46 baz
47 {the_z  Reg#(Bit#(8))}
48 xyz
49 bax
50 baz
51 {the_g  Reg#(Bit#(8))}
52 Loop
53 Body_0
54 Body_1
55 Body_2
56 Body_3
57 {the_z  Reg#(Bit#(8))}
58 xyz
59 bax
60 baz
61 {the_z  Reg#(Bit#(8))}
62 xyz
63 bax
64 baz
65 {the_z  Reg#(Bit#(8))}
66 xyz
67 bax
68 baz
69 {the_z  Reg#(Bit#(8))}
70 xyz
71 bax
72 baz
73 {the_g  Reg#(Bit#(8))}
74 Loop
75 Body_0
76 Body_1
77 Body_2
78 Body_3
79 {the_z  Reg#(Bit#(8))}
80 xyz
81 bax
82 baz
83 {the_z  Reg#(Bit#(8))}
84 xyz
85 bax
86 baz
87 {the_z  Reg#(Bit#(8))}
88 xyz
89 bax
90 baz
91 {the_z  Reg#(Bit#(8))}
92 xyz
93 bax
94 baz
---------
