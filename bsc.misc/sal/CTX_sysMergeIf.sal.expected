CTX_sysMergeIf : CONTEXT =
BEGIN
  
  STATE : TYPE =
    [# inst_a : CTX_RegN{17}!STATE
     , inst_b : CTX_RegN{17}!STATE
     , inst_c : CTX_RegN{17}!STATE
     , inst_s1 : CTX_RegN{1}!STATE
     , inst_s2 : CTX_RegN{1}!STATE
     , inst_s3 : CTX_RegN{1}!STATE
     , inst_f1 : CTX_FIFO2{17}!STATE
     , inst_f2 : CTX_FIFO2{17}!STATE
     , inst_f3 : CTX_FIFO2{17}!STATE
     #] ;
  
  ctor : STATE =
    (# inst_a := CTX_RegN{17}!ctor(Bit{17}!mkConst(0))
     , inst_b := CTX_RegN{17}!ctor(Bit{17}!mkConst(5))
     , inst_c := CTX_RegN{17}!ctor(Bit{17}!mkConst(5))
     , inst_s1 := CTX_RegN{1}!ctor(Bit{1}!mkConst(0))
     , inst_s2 := CTX_RegN{1}!ctor(Bit{1}!mkConst(0))
     , inst_s3 := CTX_RegN{1}!ctor(Bit{1}!mkConst(0))
     , inst_f1 := CTX_FIFO2{17}!ctor(Bit{1}!mkConst(1))
     , inst_f2 := CTX_FIFO2{17}!ctor(Bit{1}!mkConst(1))
     , inst_f3 := CTX_FIFO2{17}!ctor(Bit{1}!mkConst(1))
     #) ;
  
  rule_RL_r1 (state0 : STATE) : [ BOOLEAN, STATE ] =
    LET def_s1__h527 : Bit{1}!T = CTX_RegN{1}!meth_read(state0.inst_s1)
    IN LET def_f3_i_notFull____d1 : Bit{1}!T = CTX_FIFO2{17}!meth_i_notFull(state0.inst_f3)
    IN LET def_f2_i_notFull____d2 : Bit{1}!T = CTX_FIFO2{17}!meth_i_notFull(state0.inst_f2)
    IN LET def_f1_i_notFull____d3 : Bit{1}!T = CTX_FIFO2{17}!meth_i_notFull(state0.inst_f1)
    IN LET def_f2_i_notFull_AND_f1_i_notFull___d4 : BOOLEAN =
	     Prim!bitToBool(def_f2_i_notFull____d2) AND Prim!bitToBool(def_f1_i_notFull____d3)
    IN LET def_f3_i_notFull_AND_f2_i_notFull_AND_f1_i_notFull___d5 : BOOLEAN =
	     Prim!bitToBool(def_f3_i_notFull____d1) AND def_f2_i_notFull_AND_f1_i_notFull___d4
    IN LET act1 : [ CTX_RegN{17}!STATE, Unit!T ] =
	     CTX_RegN{17}!meth_write(Bit{17}!mkConst(5), state0.inst_a)
    IN LET state1 : STATE = state0 WITH .inst_a := act1.1
    IN LET act2 : [ CTX_FIFO2{17}!STATE, Unit!T ] =
	     CTX_FIFO2{17}!meth_enq(Bit{17}!mkConst(13), state1.inst_f2)
    IN LET state2 : STATE = state1 WITH .inst_f2 := act2.1
    IN LET act3 : [ CTX_RegN{17}!STATE, Unit!T ] =
	     CTX_RegN{17}!meth_write(Bit{17}!mkConst(6), state2.inst_b)
    IN LET state3 : STATE = state2 WITH .inst_b := act3.1
    IN LET act4 : [ CTX_RegN{17}!STATE, Unit!T ] =
	     CTX_RegN{17}!meth_write(Bit{17}!mkConst(7), state0.inst_c)
    IN LET state4 : STATE = state0 WITH .inst_c := act4.1
    IN LET state5 : STATE = IF Prim!bitToBool(def_s1__h527) THEN state3 ELSE state4 ENDIF
    IN LET act6 : [ CTX_FIFO2{17}!STATE, Unit!T ] =
	     CTX_FIFO2{17}!meth_enq(Bit{17}!mkConst(22), state5.inst_f3)
    IN LET state6 : STATE = state5 WITH .inst_f3 := act6.1
    IN LET act7 : [ CTX_FIFO2{17}!STATE, Unit!T ] =
	     CTX_FIFO2{17}!meth_enq(Bit{17}!mkConst(12), state6.inst_f1)
    IN LET state7 : STATE =
	     IF (NOT Prim!bitToBool(def_s1__h527)) THEN state6 WITH .inst_f1 := act7.1 ELSE state6 ENDIF
    IN ( def_f3_i_notFull_AND_f2_i_notFull_AND_f1_i_notFull___d5, state7 ) ;
  
END
