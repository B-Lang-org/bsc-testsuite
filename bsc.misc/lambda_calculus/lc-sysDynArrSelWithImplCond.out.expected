data MOD_sysDynArrSelWithImplCond =
    MOD_sysDynArrSelWithImplCond
	{ inst_fs_0__sysDynArrSelWithImplCond :: MOD_FIFO2 #8
	, inst_fs_1__sysDynArrSelWithImplCond :: MOD_FIFO2 #8
	, inst_fs_2__sysDynArrSelWithImplCond :: MOD_FIFO2 #8
	, inst_fs_3__sysDynArrSelWithImplCond :: MOD_FIFO2 #8
	, inst_idx__sysDynArrSelWithImplCond :: MOD_RegN #2
	};

ctor_sysDynArrSelWithImplCond :: MOD_sysDynArrSelWithImplCond;
ctor_sysDynArrSelWithImplCond =
    MOD_sysDynArrSelWithImplCond
	{ inst_fs_0__sysDynArrSelWithImplCond = ctor_FIFO2 (8 :: Bit #32) (1 :: Bit #1)
	, inst_fs_1__sysDynArrSelWithImplCond = ctor_FIFO2 (8 :: Bit #32) (1 :: Bit #1)
	, inst_fs_2__sysDynArrSelWithImplCond = ctor_FIFO2 (8 :: Bit #32) (1 :: Bit #1)
	, inst_fs_3__sysDynArrSelWithImplCond = ctor_FIFO2 (8 :: Bit #32) (1 :: Bit #1)
	, inst_idx__sysDynArrSelWithImplCond = ctor_RegN (2 :: Bit #32) (0 :: Bit #2)
	};

dim_sysDynArrSelWithImplCond :: MOD_sysDynArrSelWithImplCond -> MOD_sysDynArrSelWithImplCond -> Bool;
dim_sysDynArrSelWithImplCond =
    (\ (mod1 :: MOD_sysDynArrSelWithImplCond) ->
     (\ (mod2 :: MOD_sysDynArrSelWithImplCond) ->
      (dim_FIFO2 (inst_fs_0__sysDynArrSelWithImplCond mod1) (inst_fs_0__sysDynArrSelWithImplCond mod2))
      && (dim_FIFO2 (inst_fs_1__sysDynArrSelWithImplCond mod1) (inst_fs_1__sysDynArrSelWithImplCond mod2))
      && (dim_FIFO2 (inst_fs_2__sysDynArrSelWithImplCond mod1) (inst_fs_2__sysDynArrSelWithImplCond mod2))
      && (dim_FIFO2 (inst_fs_3__sysDynArrSelWithImplCond mod1) (inst_fs_3__sysDynArrSelWithImplCond mod2))
      && (dim_RegN (inst_idx__sysDynArrSelWithImplCond mod1) (inst_idx__sysDynArrSelWithImplCond mod2))));

meth_get_sysDynArrSelWithImplCond :: MOD_sysDynArrSelWithImplCond -> Bit #8;
meth_get_sysDynArrSelWithImplCond =
    (\ (state0 :: MOD_sysDynArrSelWithImplCond) ->
     let { (def_x_first__h263 :: Bit #8) = meth_first_FIFO2 (inst_fs_0__sysDynArrSelWithImplCond state0)
	 ; (def_x_first__h340 :: Bit #8) = meth_first_FIFO2 (inst_fs_1__sysDynArrSelWithImplCond state0)
	 ; (def_x_first__h417 :: Bit #8) = meth_first_FIFO2 (inst_fs_2__sysDynArrSelWithImplCond state0)
	 ; (def_x_first__h494 :: Bit #8) = meth_first_FIFO2 (inst_fs_3__sysDynArrSelWithImplCond state0)
	 ; (def_x__h572 :: Bit #2) = meth_read_RegN (inst_idx__sysDynArrSelWithImplCond state0)
	 ; (def_ARR_fs_0_first_fs_1_first_fs_2_first_fs_3_first___d5 :: Array #4 (Bit #8)) =
	       buildArray4 def_x_first__h263 def_x_first__h340 def_x_first__h417 def_x_first__h494
	 }
     in arraySelect def_ARR_fs_0_first_fs_1_first_fs_2_first_fs_3_first___d5 def_x__h572);

meth_RDY_get_sysDynArrSelWithImplCond :: MOD_sysDynArrSelWithImplCond -> Bool;
meth_RDY_get_sysDynArrSelWithImplCond =
    (\ (state0 :: MOD_sysDynArrSelWithImplCond) ->
     let { (def_x__h572 :: Bit #2) = meth_read_RegN (inst_idx__sysDynArrSelWithImplCond state0)
	 ; (def_fs_0_i_notEmpty____d7 :: Bit #1) =
	       meth_i_notEmpty_FIFO2 (inst_fs_0__sysDynArrSelWithImplCond state0)
	 ; (def_fs_1_i_notEmpty____d8 :: Bit #1) =
	       meth_i_notEmpty_FIFO2 (inst_fs_1__sysDynArrSelWithImplCond state0)
	 ; (def_fs_2_i_notEmpty____d9 :: Bit #1) =
	       meth_i_notEmpty_FIFO2 (inst_fs_2__sysDynArrSelWithImplCond state0)
	 ; (def_fs_3_i_notEmpty____d10 :: Bit #1) =
	       meth_i_notEmpty_FIFO2 (inst_fs_3__sysDynArrSelWithImplCond state0)
	 }
     in bitToBool
	    (if (primEQ def_x__h572 (0 :: Bit #2))
	     then def_fs_0_i_notEmpty____d7
	     else if (primEQ def_x__h572 (1 :: Bit #2))
		  then def_fs_1_i_notEmpty____d8
		  else if (primEQ def_x__h572 (2 :: Bit #2))
		       then def_fs_2_i_notEmpty____d9
		       else if (primEQ def_x__h572 (3 :: Bit #2)) then def_fs_3_i_notEmpty____d10 else (1 :: Bit #1)));
